# This is a basic workflow to help you get started with Actions

name: Blank Workflow

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    branches: [master]
  pull_request:
    branches: [master]

env:
  stackName: Bootstrap
  secreto: ${{secrets.COGNITO_PASSWORD}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Jobcito:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    if: github.event.pull_request.draft == false
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build
        run: Write-Host "build...ing"
        shell: pwsh

      - name: UTs
        run: "[Environment]::SetEnvironmentVariable('pila', '${{ env.stackName }}')"
        shell: pwsh

      - name: Leer el maera
        run: |
          Write-Host "El kany es ${{ env.secreto }}"
          Start-Sleep -s 10
        shell: pwsh

      - name: Leer el stack A
        id: leer-stack-a
        run: ./a.ps1
        shell: pwsh

      - name: Resultado Stack A
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: 2- Resultado Stack A
          conclusion: ${{ steps.leer-stack-a.outcome }}

      - name: Leer el stack B
        id: leer-stack-b
        run: ./b.ps1 ${{ steps.leer-stack-a.outputs.opa }}
        shell: pwsh

      - name: Resultado Stack B
        if: steps.leer-stack-a.outputs.opa == 'true'
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: 3- Resultado Stack B
          conclusion: ${{ steps.leer-stack-b.outcome }}

      - name: LLamar a limpieza
        if: always()
        id: leer-stack-c
        run: |
          curl `
          -X POST `
          -H "Accept: application/vnd.github.v3+json" `
          -H 'authorization: Bearer ${{ secrets.CLEANING }}' `
          https://api.github.com/repos/hacasco/hello-github-actions/dispatches `
          -d '{"event_type":"cleaning", "client_payload": {"var": 123}}'
        shell: pwsh

      - name: Resultado Stack C
        if: always()
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: 1- Resultado Stack C
          conclusion: ${{ steps.leer-stack-c.outcome }}

      - name: Siempre corre
        if: always()
        run: Write-Host 'Haciendo limpieza'
        shell: pwsh
